<?xml version="1.0" encoding="UTF-8"?>
<!--

    QI Analyze is a Java EE framework for identifying and analyzing Quality Indicators
    Copyright (C) 2010  QIAnalyze LLC http://www.qianalyze.org

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the GNU
    Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see http://www.gnu.org/licenses/

-->
<persistence version="2.0"
	xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://java.sun.com/xml/ns/persistence
        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
        
	<persistence-unit name="pavanPU" transaction-type="JTA">
	<!-- Default data source for JBoss AS 7.1 Final -->
		<jta-data-source>java:jboss/datasources/ExampleDS</jta-data-source>
		<class>org.qianalyze.api.analyzer.AnalyzerRequest</class>
		<class>org.qianalyze.api.analyzer.AnalyzerResponse</class>
		<class>org.qianalyze.api.indicator.Indicator</class>
		<class>org.qianalyze.api.indicator.IndicatorObservation</class>
		<class>org.qianalyze.api.indicator.IndicatorResult</class>
		<class>org.qianalyze.api.module.Module</class>
		<class>org.qianalyze.api.module.ModuleObservation</class>
		<class>org.qianalyze.api.module.ModuleResponse</class>
		<properties>
			<property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />
			<property name="hibernate.hbm2ddl.auto" value="create-drop" />
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.transaction.manager_lookup_class"
				value="org.hibernate.transaction.BTMTransactionManagerLookup" />
		</properties>
	</persistence-unit>
</persistence>

<!-- Use this one for MySQL. 
	<persistence-unit name="SampleModulePU" transaction-type="JTA">
		<jta-data-source>java:/QiAnalyzeDB</jta-data-source>
		<class>org.qianalyze.api.analyzer.AnalyzerRequest</class>
		<class>org.qianalyze.api.analyzer.AnalyzerResponse</class>
		<class>org.qianalyze.api.indicator.Indicator</class>
		<class>org.qianalyze.api.indicator.IndicatorObservation</class>
		<class>org.qianalyze.api.indicator.IndicatorResult</class>
		<class>org.qianalyze.api.module.Module</class>
		<class>org.qianalyze.api.module.ModuleObservation</class>
		<class>org.qianalyze.api.module.ModuleResponse</class>
		<properties>
			<property name="hibernate.hbm2ddl.auto" value="create" />
			<property name="hibernate.show_sql" value="false" />
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect" />
		</properties>
	</persistence-unit>
</persistence>
-->